# //replacing and modifying one_column based on the value of another column. For this in 1 we are subsetting value of acct_cur ( value are in euro) and in 
step 2 we are replacing the of acct_amount column ( the euro value ) to converted dollar value. in step 3 changing the labels.

# 1.  Find values of acct_cur that are equal to 'euro'
acct_eu = banking['acct_cur'] == 'euro'

# 2. Convert acct_amount where it is in euro to dollars
banking.loc[acct_eu, 'acct_amount'] = banking.loc[acct_eu, 'acct_amount'] * 1.1 

# 3. Unify acct_cur column by changing 'euro' values to 'dollar'
banking.loc[acct_eu, 'acct_cur'] = 'dollar'

# Assert that only dollar currency remains
assert banking['acct_cur'].unique() == 'dollar'


# // summing up columns totals (of 3 columns) and cross validateing with anouther columns , in step 2.

# Store fund columns to sum against. step#1
fund_columns = ['fund_A', 'fund_B', 'fund_C', 'fund_D']

# Find rows where fund_columns row sum == inv_amount step#2
inv_equ = banking[fund_columns].sum(axis=1) ==  banking['inv_amount']

# Store consistent and inconsistent data
consistent_inv = banking[inv_equ]
inconsistent_inv = banking[~inv_equ]

# Store consistent and inconsistent data
print("Number of inconsistent investments: ", inconsistent_inv.shape[0])

